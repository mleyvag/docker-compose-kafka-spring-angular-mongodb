version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${MY_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  mongo:
    image: mongo:4.2
    container_name: mongo
    ports:
    - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: my-db
    volumes:
      - /data/db:/data/db
  producer:
    build:
      context: kafka-producer
    container_name: producer
    environment:
      MY_IP: ${MY_IP}
    ports:
      - 8080:8080
    depends_on:
      - kafka
  consumer_topic_one:
    build:
      context: kafka-consumer-topic-one
    container_name: consumer_topic_one
    environment:
      MY_IP: ${MY_IP}
    ports:
     - 8081:8081
    depends_on:
     - producer
     - mongo
  consumer_topic_two:
    build:
      context: kafka-consumer-topic-two
    container_name: consumer_topic_two
    environment:
      MY_IP: ${MY_IP}
    ports:
     - 8082:8082
    depends_on:
     - producer
  web-app:
    build:
      context: web-app
    container_name: web-app
    ports:
     - 80:80
    depends_on:
     - producer